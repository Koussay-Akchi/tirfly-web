{% extends 'base.html.twig' %}

{% block title %}ChatBot{% endblock %}

{% block body %}
<div class="chat-container">
    <div class="chat-box" id="chatBox"></div>
    <div class="input-area">
        <input type="text" id="userInput" placeholder="Tapez votre question...">
        <button onclick="sendMessage()">Envoyer</button>
    </div>
</div>

<style>
    .chat-container {
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
    }
    .chat-box {
        height: 500px;
        border: 1px solid #ccc;
        margin-bottom: 20px;
        padding: 15px;
        overflow-y: auto;
        background-color: #fff;
    }
    .message {
        margin: 10px 0;
        padding: 10px;
        border-radius: 15px;
        word-wrap: break-word;
    }
    .user-message {
        background-color: #e3f2fd;
        margin-left: 20%;
        border-bottom-right-radius: 5px;
    }
    .bot-message {
        background-color: #f5f5f5;
        margin-right: 20%;
        border-bottom-left-radius: 5px;
    }
    .input-area {
        display: flex;
        gap: 10px;
    }
    input[type="text"] {
        flex: 1;
        padding: 12px;
        border: 1px solid #ccc;
        border-radius: 25px;
        font-size: 16px;
    }
    button {
        padding: 12px 25px;
        background-color: #2196F3;
        color: white;
        border: none;
        border-radius: 25px;
        cursor: pointer;
        transition: background-color 0.3s;
    }
    button:hover {
        background-color: #1976D2;
    }
</style>

<script>
    const chatBox = document.getElementById('chatBox');
    const userInput = document.getElementById('userInput');

    function addMessage(message, isUser = false) {
        const div = document.createElement('div');
        div.className = `message ${isUser ? 'user-message' : 'bot-message'}`;
        div.textContent = message;
        chatBox.appendChild(div);
        chatBox.scrollTop = chatBox.scrollHeight;
    }

    async function sendMessage() {
        const question = userInput.value.trim();
        if (!question) return;

        addMessage(question, true);
        userInput.value = '';

        try {
            const response = await fetch('/chatbot/ask', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ question })
            });

            if (!response.ok) {
                throw new Error(`Erreur HTTP! Statut: ${response.status}`);
            }

            const data = await response.json();
            addMessage(data.response || 'Pas de réponse du serveur');

        } catch (error) {
            addMessage(`Erreur de connexion: ${error.message}`);
        }
    }

    // Gestion de la touche Entrée
    userInput.addEventListener('keypress', (e) => {
        if (e.key === 'Enter') {
            sendMessage();
        }
    });
</script>
{% endblock %}
