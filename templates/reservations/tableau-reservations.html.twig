{% extends 'base-staff.html.twig' %}

{% block title %}Liste des Réservations
{% endblock %}

{% block body %}
	<main class="main">
		<div class="container">
			<div class="btn-group btn-group-lg mb-4 d-flex justify-content-center" role="group" aria-label="Large button group">
				<button type="button" class="btn btn-primary" id="showVoyage">
					<div class="icon-placeholder" id="iconVoyage">
						<i class="align-middle" data-feather="arrow-down-circle"></i>
					</div>
					Voyage
				</button>
				<button type="button" class="btn btn-info" id="showSejour">
					<div class="icon-placeholder" id="iconSejour"></div>
					Hébergement
				</button>
				<button type="button" class="btn btn-success" id="showPack">
					<div class="icon-placeholder" id="iconPack"></div>
					Pack
				</button>
			</div>
			<div class="table-container" id="tableView">
				<h1 class="table-title">Liste des réservations</h1>
				<div class="table-responsive">
					<table class="table table-striped table-hover" id="reservationTable">
						<thead class="table-dark">
							<tr>
								<th>ID</th>
								<th>Date</th>
								<th>Client</th>
								<th class="voyage-col">Voyage</th>
								<th class="sejour-col d-none">Séjour</th>
								<th class="pack-col d-none">Pack</th>
								<th>Personnes</th>
								<th>Prix total</th>
								<th>Statut</th>
								<th>Actions</th>
							</tr>
						</thead>
						<tbody id="reservationBody">
							{% for reservation in reservations %}
								<tr class="reservation-row">
									<td>{{ reservation.id }}</td>
									<td>{{ reservation.dateReservation ? reservation.dateReservation|date('d/m/Y H:i') : 'N/A' }}</td>
									<td>{{ reservation.client ? reservation.client.nom ~ ' ' ~ reservation.client.prenom : '—' }}</td>
									<td class="voyage-col">{{ reservation.voyage ? reservation.voyage.nom : '—' }}</td>
									<td class="sejour-col d-none">{{ reservation.sejour ? reservation.sejour.hebergement.nom : '—' }}</td>
									<td class="pack-col d-none">{{ reservation.pack ? reservation.pack.nom : '—' }}</td>
									<td>{{ reservation.nombrePersonnes }}</td>
									<td>{{ reservation.prixTotal|number_format(2, '.', ',') }}
										€</td>
									<td>
										{% set badgeClass = {
                                        'confirmée': 'success',
                                        'en attente': 'warning',
                                        'annulée': 'danger'
                                    }[reservation.statut|lower] ?? 'secondary' %}
										<span class="badge bg-{{ badgeClass }}">{{ reservation.statut|capitalize }}</span>
									</td>
									<td>
										<div class="table-actions" style="display: flex; gap: 5px;">
											aaa
										</div>
									</td>
								</tr>
							{% else %}
								<tr>
									<td colspan="10" class="text-center">Aucune réservation trouvée.</td>
								</tr>
							{% endfor %}
						</tbody>
					</table>
				</div>
				<div class="pagination mt-3">
					{{ knp_pagination_render(reservations) }}
				</div>
			</div>
			<div id="calendarView" style="display: none;">
				<h1>Calendrier des Réservations</h1>
			</div>
		</div>
	</main>
	 <script>
	document.addEventListener('DOMContentLoaded', function () {
	    const voyageBtn = document.getElementById('showVoyage');
	    const sejourBtn = document.getElementById('showSejour');
	    const packBtn = document.getElementById('showPack');
	    const iconVoyage = document.getElementById('iconVoyage');
	    const iconSejour = document.getElementById('iconSejour');
	    const iconPack = document.getElementById('iconPack');
	    const voyageCols = document.querySelectorAll('.voyage-col');
	    const sejourCols = document.querySelectorAll('.sejour-col');
	    const packCols = document.querySelectorAll('.pack-col');
	    const reservationRows = document.querySelectorAll('.reservation-row');
	    function updateSelection(selected) {
	        iconVoyage.innerHTML = '';
	        iconSejour.innerHTML = '';
	        iconPack.innerHTML = '';
	        if(selected === 'voyage') iconVoyage.innerHTML = '<i class="align-middle" data-feather="arrow-down-circle"></i>';
	        if(selected === 'sejour') iconSejour.innerHTML = '<i class="align-middle" data-feather="arrow-down-circle"></i>';
	        if(selected === 'pack') iconPack.innerHTML = '<i class="align-middle" data-feather="arrow-down-circle"></i>';
	        feather.replace();
	    }
	    function toggleColumns(showCols, filterFn) {
	        [voyageCols, sejourCols, packCols].forEach(cols => {
	            cols.forEach(col => col.classList.add('d-none'));
	        });
	        showCols.forEach(col => col.classList.remove('d-none'));
	        reservationRows.forEach(row => {
	            const voyageCell = row.querySelector('.voyage-col').textContent.trim();
	            const sejourCell = row.querySelector('.sejour-col').textContent.trim();
	            const packCell = row.querySelector('.pack-col').textContent.trim();
	            row.style.display = filterFn(voyageCell, sejourCell, packCell) ? '' : 'none';
	        });
	    }
	    voyageBtn.addEventListener('click', () => {
	        updateSelection('voyage');
	        toggleColumns(voyageCols, (v, s, p) => v !== '—');
	    });
	    sejourBtn.addEventListener('click', () => {
	        updateSelection('sejour');
	        toggleColumns(sejourCols, (v, s, p) => s !== '—');
	    });
	    packBtn.addEventListener('click', () => {
	        updateSelection('pack');
	        toggleColumns(packCols, (v, s, p) => p !== '—');
	    });
	    updateSelection('voyage');
	    toggleColumns(voyageCols, (v, s, p) => v !== '—');
	});
	</script>
{% endblock %}
