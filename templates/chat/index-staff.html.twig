{% extends 'base-staff.html.twig' %}

{% block title %}Messagerie{% endblock %}

{% block body %}
<!DOCTYPE html>
<html>
<head>
    <title>Messagerie</title>
    <style>
        :root {
            --primary-color: #007bff;
            --secondary-color: #f8f9fa;
            --border-color: #dee2e6;
            --text-color: #333;
            --dark-primary: #0056b3;
        }

        .chat-container {
            display: flex;
            height: 80vh;
            max-width: 1200px;
            margin: 20px auto;
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            overflow: hidden;
        }

        .chat-list {
            width: 30%;
            background: var(--secondary-color);
            border-right: 1px solid var(--border-color);
            overflow-y: auto;
        }

        .chat-list h3 {
            padding: 20px;
            margin: 0;
            border-bottom: 1px solid var(--border-color);
            font-size: 1.2rem;
            color: var(--text-color);
        }

        .chat-list ul {
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .chat-list li {
            padding: 15px 20px;
            border-bottom: 1px solid var(--border-color);
            transition: background 0.2s;
        }

        .chat-list li:hover {
            background: rgba(0,123,255,0.1);
        }

        .chat-list a {
            text-decoration: none;
            color: var(--text-color);
            font-weight: 500;
        }

        .chat-messages {
            width: 70%;
            padding: 20px;
            display: flex;
            flex-direction: column;
            overflow-y: auto;
        }

        .chat-messages h2 {
            margin: 0 0 20px;
            font-size: 1.3rem;
            color: var(--text-color);
        }

        .messages {
            flex: 1;
            overflow-y: auto;
            padding: 10px;
        }

        .messages p {
            margin: 8px 0;
            padding: 10px 15px;
            border-radius: 15px;
            max-width: 70%;
            word-wrap: break-word;
        }

        .messages p.me {
            background: var(--primary-color);
            color: white;
            margin-left: auto;
        }

        .messages p.other {
            background: var(--secondary-color);
            color: var(--text-color);
            margin-right: auto;
        }

        .messages small {
            display: block;
            font-size: 0.8rem;
            opacity: 0.7;
            margin-top: 5px;
        }

        .message-input {
            display: flex;
            gap: 10px;
            padding: 10px 0;
            border-top: 1px solid var(--border-color);
        }

        .message-input textarea {
            flex: 1;
            padding: 10px;
            border: 1px solid var(--border-color);
            border-radius: 5px;
            resize: none;
            font-size: 1rem;
        }

        .message-input button {
            padding: 10px 20px;
            background: var(--primary-color);
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background 0.2s;
        }

        .message-input button:hover {
            background: var(--dark-primary);
        }

        .error-message {
            color: red;
            font-size: 0.9rem;
            margin-top: 5px;
        }

        @media (max-width: 768px) {
            .chat-container {
                flex-direction: column;
                height: auto;
            }
            
            .chat-list, .chat-messages {
                width: 100%;
            }
            
            .chat-list {
                max-height: 30vh;
            }
        }
    </style>
</head>
<body>
    <div class="chat-container">
        <div class="chat-list">
            <h3>Vos conversations</h3>
            <ul>
                {% for chat in chats %}
                    <li>
                        <a href="{{ path('chat_staff_show', {'chat': chat.id}) }}">
                            {% if chat.client.id == app.user.id %}
                                {{ chat.support.prenom|capitalize }} {{ chat.support.nom|capitalize }}
                            {% else %}
                                {{ chat.client.prenom|capitalize }} {{ chat.client.nom|capitalize }}
                            {% endif %}
                        </a>
                    </li>
                {% endfor %}
            </ul>
        </div>
        <div class="chat-messages">
            {% if selectedChat %}
                <h2>Conversation avec 
                    {% if selectedChat.client.id == app.user.id %}
                        {{ selectedChat.support.prenom|capitalize }} {{ selectedChat.support.nom|capitalize }}
                    {% else %}
                        {{ selectedChat.client.prenom|capitalize }} {{ selectedChat.client.nom|capitalize }}
                    {% endif %}
                </h2>
                <div class="messages" id="messages">
                    {% for message in messages %}
                        <p class="{{ message.expediteur.id == app.user.id ? 'me' : 'other' }}">
                            {{ message.expediteur.prenom|capitalize }} {{ message.expediteur.nom|capitalize }}: 
                            {{ message.message }} 
                            <small>{{ message.dateEnvoi|date('d/m/Y H:i') }}</small>
                        </p>
                    {% endfor %}
                </div>
                <div class="message-input">
                    <textarea id="messageInput" rows="2"></textarea>
                    <button onclick="sendMessage()">Envoyer</button>
                    <div id="errorMessage" class="error-message"></div>
                </div>
            {% else %}
                <p>Sélectionnez une conversation pour commencer à discuter.</p>
            {% endif %}
        </div>
    </div>

    {% if selectedChat %}
        <script>
            const ws = new WebSocket('ws://192.168.43.217:8081');
            const messagesDiv = document.getElementById('messages');
            const messageInput = document.getElementById('messageInput');
            const errorMessageDiv = document.getElementById('errorMessage');
            const userId = {{ app.user.id }};
            const chatId = {{ selectedChat.id }};

            if (!userId) {
                console.error('User not authenticated');
                errorMessageDiv.textContent = 'Veuillez vous reconnecter.';
            }

            ws.onopen = function() {
                console.log('Connected to WebSocket server');
            };

            ws.onmessage = function(event) {
                const data = JSON.parse(event.data);
                if (data.chatId === chatId && data.userId !== userId) {
                    const messageClass = 'other';
                    const userName = 'Support';
                    const messageElement = document.createElement('p');
                    messageElement.className = messageClass;
                    messageElement.innerHTML = `${userName}: ${data.message} <small>${data.date}</small>`;
                    messagesDiv.appendChild(messageElement);
                    messagesDiv.scrollTop = messagesDiv.scrollHeight;
                }
            };

            ws.onclose = function() {
                console.log('Disconnected from WebSocket server');
                errorMessageDiv.textContent = 'Connexion au serveur perdue. Veuillez rafraîchir la page.';
            };

            function sendMessage() {
                const message = messageInput.value.trim();
                if (message) {
                    const messageData = {
                        chatId: chatId,
                        userId: userId,
                        message: message
                    };
                    ws.send(JSON.stringify(messageData));
                    const messageElement = document.createElement('p');
                    messageElement.className = 'me';
                    messageElement.innerHTML = `Vous: ${message} <small>${new Date().toLocaleString('fr-FR', { day: '2-digit', month: '2-digit', year: 'numeric', hour: '2-digit', minute: '2-digit' })}</small>`;
                    messagesDiv.appendChild(messageElement);
                    messagesDiv.scrollTop = messagesDiv.scrollHeight;
                    fetch('{{ path('chat_message') }}', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        credentials: 'same-origin',
                        body: JSON.stringify(messageData)
                    }).then(response => {
                        if (!response.ok) {
                            console.error('Failed to save message:', response.status, response.statusText);
                            errorMessageDiv.textContent = 'Erreur: le message n’a pas été enregistré. Réessayez.';
                            return response.json().then(data => { throw new Error(data.error || 'Unknown error'); });
                        }
                        console.log('Message saved successfully');
                        errorMessageDiv.textContent = '';
                        return response.json();
                    }).catch(error => {
                        console.error('Error saving message:', error.message);
                        errorMessageDiv.textContent = `Erreur: ${error.message}`;
                    });
                    messageInput.value = '';
                }
            }

            messageInput.addEventListener('keypress', function(event) {
                if (event.key === 'Enter' && !event.shiftKey) {
                    event.preventDefault();
                    sendMessage();
                }
            });
        </script>
    {% endif %}
</body>
</html>
{% endblock %}