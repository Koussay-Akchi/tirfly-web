{% extends 'base.html.twig' %}
{% block title %}
	Détails du Voyage
{% endblock %}
{% block body %}

	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
	 <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
	<link rel="stylesheet" href={{ asset('css/details-voyages.css') }} />

	<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
	<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
	<script src="https://unpkg.com/leaflet-curve"></script>



	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/assets/owl.carousel.min.css" integrity="sha512-utbX0HcOOX7GxR7Fj8JkXmStPj/paj3nX4xAw4j7Y7WInFhX5V+0/4DbZq8bOoT1uUiyWd7yDyO3ewmNudtQ==" crossorigin="anonymous" />

	{% set climat_icons = {
		'1': 'tropical.png',
		'2': 'sun.png',
		'3': 'snowflake.png',
		'4': 'desert.png',
	} %}


	 <script type="module">
						import ClimatService from '/js/ClimatService.js';
				
						document.addEventListener('DOMContentLoaded', async () => {
							const weatherDiv = document.getElementById('weather');
							const lat = weatherDiv.dataset.lat;
							const lon = weatherDiv.dataset.lon;
							const climatService = new ClimatService();
							const temperature = await climatService.getTemperature(lat, lon);
							const tempDisplay = document.getElementById('current-temperature');
							if (temperature !== null) {
								tempDisplay.textContent = `${temperature}°C`;
							} else {
								tempDisplay.textContent = 'Indisponible';
							}
						});
					</script>

	<main class="main" style="margin-top: 250px;">
		<div class="card-wrapper">
			<div class="card">
				<div class="badge-climat">
					<img src="{{ asset('images/' ~ (climat_icons[voyage.destination.climat] ?? 'default.jpg')) }}" alt="Climat">
				</div>
				<div class="product-imgs">
					<div class="img-display">

						<div class="img-showcase">
							<img src="{{ asset(voyage.getImage() ? voyage.getImage() : 'images/default.jpg') }}" alt="Image du voyage">
						</div>
						<div id="voyage-map" style="height: 300px; margin-top: 10px; border-radius: 10px; overflow: hidden;"></div>			
					</div>
				</div>

				<div class="product-content">
					<h2 class="product-title">{{ voyage.nom }}</h2>
					<div class="product-detail">
						<h2>Détails du Voyage :</h2>

						<ul>
							<li>Destination :
								<span>{{ voyage.destination.ville }},
									{{ voyage.destination.pays }}</span>
							</li>
							<li>Dates :
								<span>{{ voyage.dateDepart|date('d/m/Y') }}
									-
									{{ voyage.dateArrive|date('d/m/Y') }}</span>
							</li>
							<li>Durée :
								<span>{{ voyage.dateDepart.diff(voyage.dateArrive).days }}
									jours</span>
							</li>
							<li>Formule :
								<span>{{ voyage.formule|replace({'_': ' '})|lower|capitalize }}</span>
							</li>
							<li>Note :
								<span class="stars">
									{% for i in 1..5 %}
										{% if i <= voyage.note %}
											⭐
										{% elseif i - 0.5 == voyage.note %}
											✬
										{% else %}
											☆
										{% endif %}
									{% endfor %}
								</span>
							</li>
							<li>
								Météo actuelle :
								<span id="current-temperature">Chargement...</span>
								<div id="weather" data-lat="{{ voyage.destination.latitude }}" data-lon="{{ voyage.destination.longitude }}" style="display:inline;"></div>
							</li>
						</ul>
						<p>{{ voyage.description }}</p>
					</div>
					<div class="product-price">
						<p class="new-price">Prix :
							<span>{{ voyage.prix }}
								DT/Personne</span>
						</p>
					</div>
					<div class="purchase-info">
						{% if dejaReserve %}
							<span data-bs-toggle="tooltip" data-bs-placement="top" title="Vous avez déjà une réservation en attente pour ce voyage." style="display: inline-block; position: relative;">
								<button type="button" class="btn reserver" style="background-color: grey; cursor: not-allowed; pointer-events: none;" disabled>
									Réserver
								</button>
							</span>
						{% else %}
							<button type="button" class="btn reserver" onclick="window.location.href='{{ path('ajout_reservation', {'type': 'voyage', 'id': voyage.id}) }}'">
								Réserver
							</button>
						{% endif %}
						<a href="{{ path('ajouter_feedbackk', {'id': voyage.id}) }}" class="card-feedback-button btn btn-primary">Donner un feedback</a>
					</div>


				</div>
			</div>
		</div>

		<div class="voyage-details-feedback-container mt-4">
			<h2>Avis des voyageurs</h2>
			<form method="post" class="voyage-details-feedback-form">
				<div class="rating-input">
					<label for="note">Note :</label>
					<div class="star-rating">
						<input type="radio" id="star5" name="note" value="5">
						<label for="star5">★</label>
						<input type="radio" id="star4" name="note" value="4">
						<label for="star4">★</label>
						<input type="radio" id="star3" name="note" value="3">
						<label for="star3">★</label>
						<input type="radio" id="star2" name="note" value="2">
						<label for="star2">★</label>
						<input type="radio" id="star1" name="note" value="1">
						<label for="star1">★</label>
					</div>
				</div>
				<label for="comment">Avis :</label>
				<textarea name="comment" required class="feedback-textarea"></textarea>
				<button type="submit" class="submit-feedback-btn">Envoyer</button>
			</form>

			<div class="voyage-details-feedback-list">
				{% for feedback in voyage.feedbacks %}
					<div class="voyage-details-feedback-item">
						<div class="feedback-header">
							<strong>{{ feedback.client.nom }}
								{{ feedback.client.prenom }}</strong>
							<span class="feedback-date">{{ feedback.dateFeedback|date('d/m/Y') }}</span>
						</div>
						<div class="feedback-rating">
							{% for i in 1..5 %}
								{% if i <= feedback.note %}
									<span class="filled-star">★</span>
								{% else %}
									<span class="empty-star">☆</span>
								{% endif %}
							{% endfor %}
						</div>
						<p class="feedback-content">{{ feedback.contenu }}</p>
					</div>
				{% endfor %}
			</div>
		</div>
	</main>

	<script>
			document.addEventListener('DOMContentLoaded', function () {
				var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
				tooltipTriggerList.map(function (tooltipTriggerEl) {
					return new bootstrap.Tooltip(tooltipTriggerEl);
				});
			});
	</script>

	<script>
	document.addEventListener('DOMContentLoaded', function () {
		const fixedLat = 36.78465142459926;
		const fixedLon = 10.061385612792224;

		const destinationLat = parseFloat("{{ voyage.destination.latitude }}");
		const destinationLon = parseFloat("{{ voyage.destination.longitude }}");

		const map = L.map('voyage-map');

		const fixedLatLng = [fixedLat, fixedLon];
		const destLatLng = [destinationLat, destinationLon];

		map.fitBounds([fixedLatLng, destLatLng], {
			padding: [50, 50]
		});


		L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
			attribution: '&copy; OpenStreetMap contributors'
		}).addTo(map);

		const fixedMarker = L.marker([fixedLat, fixedLon]).addTo(map);

		const destMarker = L.marker([destinationLat, destinationLon]).addTo(map);

		const latlngs = [
			'M', [fixedLat, fixedLon],
			'Q', [(fixedLat + destinationLat) / 2 + 5, (fixedLon + destinationLon) / 2], [destinationLat, destinationLon]
		];

		const curvedPath = L.curve(latlngs, {
			color: '#f00',
			weight: 3,
			dashArray: '5, 5',
			opacity: 0.8
		}).addTo(map);
	});
</script>


{% endblock %}
