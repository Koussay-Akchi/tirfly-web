{% extends 'base.html.twig' %}

{% block title %}Packs Populaires{% endblock %}

{% block body %}
<section>
    <div class="container">
        <p class="section-subtitle">Découvrez nos meilleures offres</p>
        <h2 class="h2 section-title">Packs Populaires</h2>
        <p class="section-text">
            Choisissez parmi une sélection de packs de voyage complets incluant transport, hébergement et activités. Parfait pour vos prochaines aventures !
        </p>

     <!-- Champ pour le code coupon -->
<div class="coupon-section mb-4">
    <div class="input-group">
        <input type="text" id="coupon-input" class="form-control" placeholder="Entrez un code promo" aria-label="Code promo" maxlength="20">
        <button class="btn btn-success" type="button" onclick="applyCoupon()">
            <i class="fas fa-tag me-2"></i>Appliquer
        </button>
    </div>
    <p id="coupon-feedback" class="mt-2 text-info coupon-feedback"></p>
</div>

        <ul class="popular-list">
    {% if packs.results|length > 0 %}
        {% for pack in packs.results %}
            <li class="popular-item">
                <div class="popular-card" data-pack-id="{{ pack.id }}">
                    <!-- Image du pack -->
                    <figure class="card-image">
                        <img src="{{ pack.image ? asset('Uploads/packs/' ~ pack.image) : asset('images/default-pack.jpg') }}" 
                             alt="{{ pack.nom }} image" 
                             class="voyage-image">
                    </figure>

                    <!-- Contenu de la carte -->
                    <div class="card-content">
                       
                        

                        <!-- Prix -->
                            <div class="card-pricing">
                                Prix original : <strong class="original-price">{{ pack.prix }} €</strong><br>
                                <span class="discounted-price text-success fw-bold"></span>
                            </div>

                        <!-- Nom du voyage associé -->
                        <p class="card-subtitle">
                            {{ pack.voyages|length > 0 ? pack.voyages[0].nom : 'Aucun voyage associé' }}
                        </p>

                        <!-- Titre du pack -->
                        <h3 class="h3 card-title">
                            <a href="{{ path('app_pack_show', {id: pack.id}) }}">{{ pack.nom }}</a>
                        </h3>

                        <!-- Événements associés -->
                        {% if pack.evenements|length > 0 %}
                            <div class="pack-events mt-3">
                                <h4 class="h6">Événements inclus :</h4>
                                <ul class="event-list">
                                    {% for event in pack.evenements %}
                                        <li class="event-item">
                                            <i class="fas fa-calendar-alt me-2 text-primary"></i>
                                            {{ event.titre }} ({{ event.dateDebut|date('d/m/Y') }})
                                        </li>
                                    {% endfor %}
                                </ul>
                            </div>
                        {% endif %}

                        <!-- QR Code et bouton de réservation -->
                        <div class="card-actions mt-3">
                            <div class="qr-container" style="margin-left: 40px;" 
                                 data-url="tirfly.com{{ path('app_pack_show', {id: pack.id}) }}">
                            </div>
                            <button type="button" class="btn btn-info btn-sm mt-2" onclick="window.location.href='{{ path('ajout_reservation', {'type': 'pack', 'id': pack.id}) }}'">
								Réserver
							</button>
                        </div>
                    </div>
                </div>
            </li>
        {% endfor %}
    {% else %}
        <li class="no-results">
            <p class="text-muted text-center">Aucun pack disponible pour le moment.</p>
        </li>
    {% endif %}
</ul>

        {# Pagination Centrée #}
        {% if packs.total_pages > 1 %}
            <div class="pagination-wrapper">
                <div class="pagination">
                    {% if packs.current_page > 1 %}
                        <a href="{{ path('app_pack_index', {'page': packs.current_page - 1}) }}" class="prev">
                            <i class="fas fa-chevron-left"></i>
                        </a>
                    {% endif %}

                    {% set start = max(1, packs.current_page - 2) %}
                    {% set end = min(packs.total_pages, start + 4) %}

                    {% if start > 1 %}
                        <a href="{{ path('app_pack_index', {'page': 1}) }}" class="page">1</a>
                        {% if start > 2 %}
                            <span class="dots">...</span>
                        {% endif %}
                    {% endif %}

                    {% for i in start..end %}
                        <a href="{{ path('app_pack_index', {'page': i}) }}" class="page {{ packs.current_page == i ? 'active' : '' }}">
                            {{ i }}
                        </a>
                    {% endfor %}

                    {% if end < packs.total_pages %}
                        {% if end < packs.total_pages - 1 %}
                            <span class="dots">...</span>
                        {% endif %}
                        <a href="{{ path('app_pack_index', {'page': packs.total_pages}) }}" class="page">
                            {{ packs.total_pages }}
                        </a>
                    {% endif %}

                    {% if packs.current_page < packs.total_pages %}
                        <a href="{{ path('app_pack_index', {'page': packs.current_page + 1}) }}" class="next">
                            <i class="fas fa-chevron-right"></i>
                        </a>
                    {% endif %}
                </div>
            </div>
        {% endif %}

        
    </div>

    {# Section Assistant AI - Version organisée et stylée #}
    <div class="ai-pack-helper mt-5 mb-5">
        <div class="chat-container shadow-lg" style="border-radius: 20px; overflow: hidden; background: #ffffff;">
            <div class="chat-header bg-gradient-ai text-white d-flex justify-content-between align-items-center p-4">
                <h5 class="mb-0 d-flex align-items-center">
                    <i class="fas fa-robot me-3 animate-icon"></i>
                    Assistant Packs Trifly
                </h5>
                <small class="opacity-75">Explorez nos offres avec l'IA</small>
            </div>
            <div class="chat-body p-4" style="max-height: 400px; overflow-y: auto; background: #f9fbfd;">
                <div id="chatMessages" class="d-flex flex-column gap-3">
                    <!-- Messages seront ajoutés dynamiquement ici -->
                </div>
            </div>
            <div class="chat-footer p-4 border-top">
                <div class="d-flex align-items-center gap-3">
                    <textarea 
                        class="form-control shadow-sm animate-input" 
                        id="packQuestionInput" 
                        placeholder="Posez une question, ex: Quel est le pack le plus cher ?"
                        style="height: 60px; resize: none; border-radius: 10px; transition: all 0.3s ease;"
                        aria-label="Votre question sur les packs"></textarea>
                    <button 
                        id="askPackAiBtn" 
                        class="btn btn-gradient-ai py-3 px-4 fw-bold d-flex align-items-center justify-content-center animate-btn"
                        style="border-radius: 10px; transition: all 0.3s ease;"
                        aria-label="Envoyer la question à l'assistant">
                        <span class="normal-text">
                            <i class="fas fa-paper-plane"></i>
                        </span>
                        <span class="loading-text d-none">
                            <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                        </span>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <style>

  
        /* Conteneur du champ coupon */
.coupon-section {
    max-width: 500px; /* Limite la largeur pour une meilleure apparence */
    margin: 0 auto; /* Centre le conteneur */
    padding: 15px;
}

/* Groupe input + bouton */
.input-group {
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    border-radius: 8px;
    overflow: hidden;
}

/* Champ de saisie */
#coupon-input {
    border: 1px solid #ced4da;
    border-right: none; /* Supprime la bordure droite pour fusionner avec le bouton */
    padding: 12px 15px;
    font-size: 1rem;
    transition: border-color 0.3s ease, box-shadow 0.3s ease;
}

#coupon-input:focus {
    border-color: #28a745;
    box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25);
    outline: none;
}

/* Bouton */
.btn-success {
    background-color: #28a745;
    border: none;
    padding: 12px 20px;
    font-size: 1rem;
    font-weight: 500;
    transition: background-color 0.3s ease, transform 0.2s ease;
}

.btn-success:hover {
    background-color: #218838;
    transform: translateY(-2px);
}

.btn-success:active {
    transform: translateY(0);
}

/* Feedback */
.coupon-feedback {
    font-size: 0.9rem;
    margin-top: 10px;
    padding: 8px 15px;
    border-radius: 5px;
    transition: opacity 0.3s ease;
}

.coupon-feedback.text-info {
    color: #17a2b8;
    background-color: rgba(23, 162, 184, 0.1);
}

.coupon-feedback.text-success {
    color: #28a745;
    background-color: rgba(40, 167, 69, 0.1);
}

.coupon-feedback.text-danger {
    color: #dc3545;
    background-color: rgba(220, 53, 69, 0.1);
}

/* Responsive */
@media (max-width: 576px) {
    .coupon-section {
        padding: 10px;
    }

    #coupon-input {
        font-size: 0.9rem;
        padding: 10px;
    }

    .btn-success {
        font-size: 0.9rem;
        padding: 10px 15px;
    }
}
        /* Style pour la section Assistant AI (Chat) */
        .ai-pack-helper {
            max-width: 900px;
            margin-left: auto;
            margin-right: auto;
            padding: 0 15px;
        }

        .chat-container {
            transition: transform 0.4s ease, box-shadow 0.4s ease;
        }

        .chat-container:hover {
            transform: translateY(-5px);
            box-shadow: 0 12px 24px rgba(0, 0, 0, 0.15) !important;
        }

        .bg-gradient-ai {
            background: linear-gradient(135deg, #007bff 0%, #00d4ff 100%);
        }

        .btn-gradient-ai {
            background: linear-gradient(135deg, #007bff, #00d4ff);
            border: none;
            color: white;
        }

        .btn-gradient-ai:hover {
            background: linear-gradient(135deg, #0056b3, #00b7eb);
        }

        .animate-input:focus {
            border-color: #00d4ff;
            box-shadow: 0 0 0 0.3rem rgba(0, 212, 255, 0.25);
            transform: scale(1.01);
        }

        .animate-btn:hover {
            transform: scale(1.1);
            box-shadow: 0 6px 12px rgba(0, 123, 255, 0.3);
        }

        .animate-icon {
            transition: transform 0.3s ease, color 0.3s ease;
        }

        .animate-icon:hover {
            transform: scale(1.3);
            color: #00d4ff;
        }

        .chat-message {
            max-width: 80%;
            padding: 12px 18px;
            border-radius: 15px;
            line-height: 1.5;
            position: relative;
            animation: fadeIn 0.5s ease-in-out;
        }

        .chat-message.user {
            background: #007bff;
            color: white;
            align-self: flex-end;
            border-bottom-right-radius: 0;
        }

        .chat-message.assistant {
            background: #e9ecef;
            color: #333;
            align-self: flex-start;
            border-bottom-left-radius: 0;
        }

        .chat-message .copy-btn {
            position: absolute;
            top: 8px;
            right: 8px;
            background: none;
            border: none;
            color: #666;
            cursor: pointer;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .chat-message:hover .copy-btn {
            opacity: 1;
        }

        @keyframes fadeIn {
            0% { opacity: 0; transform: translateY(10px); }
            100% { opacity: 1; transform: translateY(0); }
        }

        .highlighted-pack {
            animation: highlight 2s ease-in-out;
            box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.5);
            border-radius: 8px;
        }

        @keyframes highlight {
            0% { box-shadow: 0 0 0 0 rgba(0, 123, 255, 0); }
            50% { box-shadow: 0 0 0 12px rgba(0, 123, 255, 0.3); }
            100% { box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.5); }
        }

        /* Liste des packs */
.popular-list {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 30px;
    padding: 0;
    list-style: none;
    margin: 0 0 40px;
}

/* Élément de liste */
.popular-item {
    display: flex;
}

/* Carte de pack */
.popular-card {
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    background: #fff;
    display: flex;
    flex-direction: column;
    width: 100%;
    height: 520px;
}

.popular-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.15);
}

/* Image */
.card-image img {
    width: 100%;
    height: 200px;
    object-fit: cover;
    display: block;
}

/* Contenu de la carte */
.card-content {
    padding: 20px;
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
}

/* Prix */
.card-pricing {
    margin-bottom: 10px;
}

.original-price {
    font-size: 1.1rem;
    color: #333;
}

.discounted-price {
    font-size: 1rem;
    color: #28a745;
}

/* Sous-titre */
.card-subtitle {
    font-size: 0.9rem;
    color: #6c757d;
    margin-bottom: 10px;
}

/* Titre */
.card-title {
    font-size: 1.25rem;
    margin: 0 0 15px;
}

.card-title a {
    color: #007bff;
    text-decoration: none;
}

.card-title a:hover {
    text-decoration: underline;
}

/* Événements */
.pack-events {
    margin-bottom: 15px;
}

.pack-events h4 {
    font-size: 0.9rem;
    margin-bottom: 10px;
}

.event-list {
    list-style: none;
    padding: 0;
    font-size: 0.85rem;
}

.event-item {
    margin-bottom: 8px;
}

/* Actions (QR code et bouton) */
.card-actions {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 10px;
}

.qr-container {
    width: 100px;
    height: 100px;
}

.btn-primary {
    background-color: #007bff;
    border: none;
    padding: 8px 20px;
    font-size: 0.9rem;
    border-radius: 5px;
}

.btn-primary:hover {
    background-color: #0056b3;
}

/* Style pour aucun résultat */
.no-results {
    grid-column: 1 / -1;
    padding: 20px;
}

        /* Style de pagination (inchangé) */
        .pagination-wrapper {
            display: flex;
            justify-content: center;
            margin: 50px 0;
        }

        .pagination {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .pagination a {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            color: #333;
            text-decoration: none;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .pagination a.page {
            background: #f5f5f5;
        }

        .pagination a.page:hover {
            background: #e0e0e0;
        }

        .pagination a.active {
            background: #0d6efd;
            color: white;
        }

        .pagination a.prev,
        .pagination a.next {
            background: transparent;
            font-size: 1.2rem;
        }

        .pagination a.prev:hover,
        .pagination a.next:hover {
            color: #0d6efd;
        }

        .pagination .dots {
            color: #999;
        }
    </style>

    <!-- Script QR Code (inchangé) -->
    <script type="module">
        import QrCodeService from '/js/QrCodeService.js';

        document.addEventListener('DOMContentLoaded', () => {
            const qrService = new QrCodeService();
            document.querySelectorAll('.qr-container').forEach(container => {
                const data = container.dataset.url;
                qrService.renderQrCode(data, container);
            });
        });
    </script>

    <!-- Script coupon (inchangé) -->
    <script>
        async function applyCoupon() {
            const code = document.getElementById("coupon-input").value.trim();
            const feedback = document.getElementById("coupon-feedback");

            if (!code) {
                feedback.textContent = "Veuillez entrer un code promo.";
                return;
            }

            try {
                const response = await fetch(`/api/coupon/${code}`);
                const data = await response.json();

                if (data.valid) {
                    feedback.textContent = `Code appliqué : -${data.remise}%`;

                    // Appliquer la réduction aux prix
                    console.log(data);
                    document.querySelectorAll('.original-price').forEach((priceEl, index) => {
                        const original = parseFloat(priceEl.textContent.replace('€', '').trim());
                        const discounted = original - (original * data.remise / 100);
                        document.querySelectorAll('.discounted-price')[index].textContent = `Nouveau prix : ${discounted.toFixed(2)} €`;
                    });
                } else {
                    feedback.textContent = "Code invalide !";
                }
            } catch (err) {
                feedback.textContent = "Erreur lors de l'application du coupon.";
                console.error(err);
            }
        }
    </script>

    <!-- Script pour l'Assistant AI -->
    <script type="module">
        import PackAiService from '/js/PackAiService.js';

        document.addEventListener('DOMContentLoaded', async () => {
            const DEBUG = true;
            const debugLog = (...args) => DEBUG && console.log('[DEBUG]', ...args);

            // Initialisation du service AI
            const aiService = new PackAiService();
            const packsData = [
                {% for pack in packs.results %}
                {
                    id: {{ pack.id }},
                    nom: "{{ pack.nom|escape('js') }}",
                    prix: {{ pack.prix }},
                    description: "{{ pack.description|escape('js') }}",
                    sejours: [
                        {% for sejour in pack.sejours %}
                        { 
                            nomHebergement: "{{ sejour.hebergement.nom|default('Non spécifié')|escape('js') }}",
                            typeHebergement: "{{ sejour.hebergement.type|default('')|escape('js') }}"
                        },
                        {% endfor %}
                    ]
                },
                {% endfor %}
            ];

            debugLog('Données brutes:', packsData);

            try {
                await aiService.initialize(packsData);
                debugLog('Service initialisé');
            } catch (error) {
                console.error('Échec de l’initialisation:', error);
                appendMessage('assistant', `
                    <div class="alert alert-danger">
                        Erreur d'initialisation: ${error.message}
                    </div>
                `);
                return;
            }

            // Fonction pour ajouter un message au chat
            function appendMessage(sender, content) {
                const chatMessages = document.getElementById('chatMessages');
                const messageDiv = document.createElement('div');
                messageDiv.className = `chat-message ${sender}`;
                messageDiv.innerHTML = `
                    ${content}
                    ${sender === 'assistant' ? '<button class="copy-btn" aria-label="Copier la réponse"><i class="far fa-copy"></i></button>' : ''}
                `;
                chatMessages.appendChild(messageDiv);
                chatMessages.scrollTop = chatMessages.scrollHeight;

                // Gestion du bouton de copie
                if (sender === 'assistant') {
                    const copyBtn = messageDiv.querySelector('.copy-btn');
                    copyBtn.addEventListener('click', () => {
                        const textToCopy = messageDiv.childNodes[0].textContent.trim();
                        navigator.clipboard.writeText(textToCopy).then(() => {
                            copyBtn.innerHTML = '<i class="fas fa-check"></i>';
                            setTimeout(() => {
                                copyBtn.innerHTML = '<i class="far fa-copy"></i>';
                            }, 2000);
                        }).catch(err => {
                            console.error('Échec de la copie:', err);
                        });
                    });
                }
            }

            // Gestion du bouton de soumission
            document.getElementById('askPackAiBtn').addEventListener('click', async () => {
                const question = document.getElementById('packQuestionInput').value.trim();
                const btn = document.getElementById('askPackAiBtn');

                if (!question) {
                    appendMessage('assistant', `
                        <div class="alert alert-warning">
                            Veuillez poser une question valide
                        </div>
                    `);
                    return;
                }

                // Ajouter la question de l'utilisateur au chat
                appendMessage('user', question);

                // État de chargement
                btn.disabled = true;
                btn.querySelector('.normal-text').classList.add('d-none');
                btn.querySelector('.loading-text').classList.remove('d-none');

                try {
                    debugLog('Envoi question:', question);
                    const startTime = performance.now();
                    const { text, mentionedPackIds } = await aiService.getPackRecommendation(question);
                    debugLog(`Temps de réponse: ${(performance.now() - startTime).toFixed(0)}ms`);
                    debugLog('Réponse:', text);
                    debugLog('Packs mentionnés:', mentionedPackIds);

                    appendMessage('assistant', text || '<em>Aucune réponse générée</em>');

                    // Surligner les packs mentionnés
                    mentionedPackIds.forEach(id => {
                        const el = document.querySelector(`[data-pack-id="${id}"]`);
                        if (el) {
                            el.classList.add('highlighted-pack');
                            setTimeout(() => el.classList.remove('highlighted-pack'), 3000);
                        }
                    });
                } catch (error) {
                    console.error('Erreur:', error);
                    appendMessage('assistant', `
                        <div class="alert alert-danger">
                            Erreur: ${error.message}
                        </div>
                    `);
                } finally {
                    btn.disabled = false;
                    btn.querySelector('.normal-text').classList.remove('d-none');
                    btn.querySelector('.loading-text').classList.add('d-none');
                    document.getElementById('packQuestionInput').value = ''; // Réinitialiser le champ
                }
            });

            // Envoyer la question avec la touche Entrée
            document.getElementById('packQuestionInput').addEventListener('keypress', (e) => {
                if (e.key === 'Enter' && !e.shiftKey) {
                    e.preventDefault();
                    document.getElementById('askPackAiBtn').click();
                }
            });
        });
    </script>
</section>
{% endblock %}


