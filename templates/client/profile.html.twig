{% extends 'base.html.twig' %}

{% block title %}My Profile{% endblock %}

{% block head %}
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.6);
            z-index: 1000;
            justify-content: center;
            align-items: center;
        }
        .modal-content {
            background: white;
            padding: 2rem;
            border-radius: 20px;
            text-align: center;
            max-width: 400px;
            width: 90%;
            position: relative;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
        }
        .modal-content p {
            margin-bottom: 1rem;
            font-size: 16px;
            color: #333;
        }
        .modal-content img {
            display: block;
            margin: 1rem auto;
            max-width: 200px;
        }
        .modal-content button {
            width: 100%;
            max-width: 200px;
            margin: 0 auto 1rem;
            padding: 10px;
            border: none;
            border-radius: 20px;
            font-size: 16px;
            cursor: pointer;
        }
        .modal-content .theme-button {
            background: linear-gradient(90deg, #2ecc71, #3498db);
            color: white;
        }
        .modal-content .theme-button:hover {
            background: linear-gradient(90deg, #3498db, #2ecc71);
        }
        .modal-content .cancel-btn {
            background: linear-gradient(90deg, #e74c3c, #c0392b);
            color: white;
        }
        .modal-content .cancel-btn:hover {
            background: linear-gradient(90deg, #c0392b, #e74c3c);
        }
        .close-modal {
            position: absolute;
            top: 10px;
            right: 15px;
            font-size: 24px;
            color: #333;
            cursor: pointer;
        }
        .close-modal:hover {
            color: #e74c3c;
        }
        .form-group {
            position: relative;
            margin-bottom: 1rem;
        }
        .form-group input {
            width: 100%;
            padding: 12px 40px 12px 15px;
            border: none;
            border-radius: 20px;
            background: rgba(255, 255, 255, 0.8);
            box-shadow: inset 0 2px 6px rgba(0, 0, 0, 0.05);
            font-size: 14px;
        }
        .form-group i {
            position: absolute;
            right: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: #3498db;
            font-size: 18px;
        }
        .error-message {
            color: #e74c3c;
            font-size: 14px;
            margin-top: 1rem;
            text-align: center;
            background: rgba(255, 255, 255, 0.7);
            padding: 10px;
            border-radius: 20px;
            max-width: 500px;
            width: 100%;
        }
        .error-message.hidden {
            display: none;
        }
    </style>
{% endblock %}

{% block body %}
<section class="section about-section gray-bg">
    <div class="container">
        <div class="row align-items-center flex-row-reverse">
            <div class="col-lg-6">
                <div class="about-text go-to">
                    <h3 class="dark-color">{{ user.nom|default('') }} {{ user.prenom|default('') }}</h3>
                    <h6 class="theme-color lead">Your Profile Overview</h6>
                    
                    <div class="row about-list">
                        <div class="col-md-6">
                            <div class="media">
                                <label>Email</label>
                                <p>{{ user.email|default('Not provided') }}</p>
                            </div>
                            <div class="media">
                                <label>Phone</label>
                                <p>{{ user.phoneNumber|default('Not provided') }}</p>
                            </div>
                            <div class="media">
                                <label>Address</label>
                                <p>{{ user.adresse|default('Not provided') }}</p>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="media">
                                <label>Age</label>
                                <p>{{ user.age|default('Not provided') }}</p>
                            </div>
                            <div class="media">
                                <label>Gender</label>
                                <p>{{ user.sexe|default('Not provided') }}</p>
                            </div>
                            <div class="media">
                                <label>Member Since</label>
                                <p>{{ user.dateCreation ? user.dateCreation|date('Y-m-d') : 'Not provided' }}</p>
                            </div>
                        </div>
                    </div>
                    
                    <div class="mt-4">
                        <a href="{{ path('client_profile_edit') }}" class="btn theme-button">Edit Profile</a>
                        <a href="{{ path('client_change_password') }}" class="btn theme-secondary">Change Password</a>
                        <button class="btn theme-button" id="fingerprint-btn">Register Fingerprint</button>
                        <form method="post" action="{{ path('client_profile_delete') }}" onsubmit="return confirm('Are you sure you want to delete your account?');" style="display: inline;">
                            <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ user.id) }}">
                            <button type="submit" class="btn btn-danger">Delete Account</button>
                        </form>
                    </div>
                    <div class="error-message hidden" id="error-message"></div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="position-relative" style="max-width: 300px; margin: 0 auto;">
                    <div class="progress-circle position-relative">
                        <svg class="progress-svg" width="300" height="300">
                            <circle class="progress-bg" cx="150" cy="150" r="130"/>
                            <circle class="progress-bar" cx="150" cy="150" r="130" 
                                    stroke-dasharray="{{ user.niveau ? (user.niveau.NiveauXP / user.niveau.MaxNiveauXP * 816) : 0 }} 816"
                                    data-percentage="{{ user.niveau ? (user.niveau.NiveauXP / user.niveau.MaxNiveauXP * 100)|round : 0 }}"/>
                        </svg>
                        <div class="about-avatar position-absolute top-50 start-50 translate-middle">
                            <img src="https://bootdey.com/img/Content/avatar/avatar7.png" 
                                 alt="Your Avatar" 
                                 class="rounded-circle"
                                 style="width: 200px; height: 200px; object-fit: cover;">
                        </div>
                    </div>
                    <div class="text-center mt-3">
                        <h4 class="theme-color mb-1">
                            Level {{ user.niveau ? user.niveau.niveau : 'N/A' }}
                        </h4>
                        <p class="mb-0">
                            <span class="xp-current">{{ user.niveau ? user.niveau.NiveauXP : 0 }}</span> / 
                            <span class="xp-max">{{ user.niveau ? user.niveau.MaxNiveauXP : 1000 }}</span> XP
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Fingerprint Enrollment Modal -->
<div class="modal" id="fingerprint-modal">
    <div class="modal-content">
        <span class="close-modal" id="close-fingerprint-modal">Ã—</span>
        <p>Enter your email and scan the QR code with your phone to enroll your fingerprint.</p>
        <div class="form-group">
            <input type="email" id="fingerprint-email" placeholder="Your email address" value="{{ user.email|default('') }}" readonly>
            <i class="fas fa-envelope"></i>
        </div>
        <button id="generate-qr-btn" class="theme-button">Generate QR Code</button>
        <div id="qr-code-container" style="display: none;">
            <p>Scan this QR code with your phone:</p>
            <img id="qr-code-image" src="" alt="QR Code">
        </div>
        <button id="cancel-fingerprint-btn" class="cancel-btn">Cancel</button>
    </div>
</div>

<script>
    function displayError(message) {
        const errorMessage = document.getElementById("error-message");
        errorMessage.textContent = message;
        errorMessage.classList.remove('hidden');
        setTimeout(() => {
            errorMessage.classList.add('hidden');
        }, 5000);
    }

    async function handleFingerprintEnrollment(email) {
        const modal = document.getElementById('fingerprint-modal');
        const generateQrButton = document.getElementById('generate-qr-btn');
        const cancelButton = document.getElementById('cancel-fingerprint-btn');
        const closeModal = document.getElementById('close-fingerprint-modal');
        const qrCodeContainer = document.getElementById('qr-code-container');
        const qrCodeImage = document.getElementById('qr-code-image');

        modal.style.display = 'flex';

        generateQrButton.addEventListener('click', async () => {
            try {
                const response = await fetch('/api/fingerprint/enroll', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ email: email })
                });

                const data = await response.json();
                if (!response.ok) {
                    throw new Error(data.error || 'Failed to generate QR code');
                }

                qrCodeImage.src = data.qrCode;
                qrCodeContainer.style.display = 'block';

                pollFingerprintEnrollmentStatus(data.token);
            } catch (error) {
                console.error("Error:", error);
                displayError("Failed to generate QR code: " + error.message);
            }
        });

        cancelButton.addEventListener('click', () => {
            modal.style.display = 'none';
            qrCodeContainer.style.display = 'none';
        });

        closeModal.addEventListener('click', () => {
            modal.style.display = 'none';
            qrCodeContainer.style.display = 'none';
        });
    }

    async function pollFingerprintEnrollmentStatus(token) {
        const interval = setInterval(async () => {
            try {
                const response = await fetch(`/api/fingerprint/enroll/status/${token}`, {
                    method: 'GET',
                    headers: { 'Content-Type': 'application/json' }
                });

                const data = await response.json();
                if (!response.ok) {
                    throw new Error(data.error || 'Failed to check enrollment status');
                }

                if (data.status === 'pending') {
                    return;
                }

                clearInterval(interval);

                if (data.status === 'success') {
                    alert("Fingerprint enrolled successfully!");
                    document.getElementById('fingerprint-modal').style.display = 'none';
                    document.getElementById('qr-code-container').style.display = 'none';
                } else {
                    displayError("Fingerprint enrollment failed.");
                    document.getElementById('qr-code-container').style.display = 'none';
                }
            } catch (error) {
                clearInterval(interval);
                displayError("Error checking enrollment status: " + error.message);
                document.getElementById('qr-code-container').style.display = 'none';
            }
        }, 2000);
    }

    document.getElementById('fingerprint-btn').addEventListener('click', () => {
        const email = '{{ user.email|default('') }}';
        if (!email) {
            displayError("Email is required to enroll fingerprint.");
            return;
        }
        handleFingerprintEnrollment(email);
    });
</script>

<style>
    .btn-danger {
        background-color: #dc3545;
        border-color: #dc3545;
        color: white;
    }
    .btn-danger:hover {
        background-color: #c82333;
        border-color: #bd2130;
    }
    {{ include('client/styles.css.twig') }}
</style>
{% endblock %}